/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SweethouseRouteImport } from './routes/sweethouse'
import { Route as SkinsmartRouteImport } from './routes/skinsmart'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as NovabankRouteImport } from './routes/novabank'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AiAssessmentRouteImport } from './routes/ai-assessment'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const SweethouseRoute = SweethouseRouteImport.update({
  id: '/sweethouse',
  path: '/sweethouse',
  getParentRoute: () => rootRouteImport,
} as any)
const SkinsmartRoute = SkinsmartRouteImport.update({
  id: '/skinsmart',
  path: '/skinsmart',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const NovabankRoute = NovabankRouteImport.update({
  id: '/novabank',
  path: '/novabank',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AiAssessmentRoute = AiAssessmentRouteImport.update({
  id: '/ai-assessment',
  path: '/ai-assessment',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-assessment': typeof AiAssessmentRoute
  '/contact': typeof ContactRoute
  '/novabank': typeof NovabankRoute
  '/projects': typeof ProjectsRoute
  '/skinsmart': typeof SkinsmartRoute
  '/sweethouse': typeof SweethouseRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-assessment': typeof AiAssessmentRoute
  '/contact': typeof ContactRoute
  '/novabank': typeof NovabankRoute
  '/projects': typeof ProjectsRoute
  '/skinsmart': typeof SkinsmartRoute
  '/sweethouse': typeof SweethouseRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-assessment': typeof AiAssessmentRoute
  '/contact': typeof ContactRoute
  '/novabank': typeof NovabankRoute
  '/projects': typeof ProjectsRoute
  '/skinsmart': typeof SkinsmartRoute
  '/sweethouse': typeof SweethouseRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/ai-assessment'
    | '/contact'
    | '/novabank'
    | '/projects'
    | '/skinsmart'
    | '/sweethouse'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/ai-assessment'
    | '/contact'
    | '/novabank'
    | '/projects'
    | '/skinsmart'
    | '/sweethouse'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/ai-assessment'
    | '/contact'
    | '/novabank'
    | '/projects'
    | '/skinsmart'
    | '/sweethouse'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AiAssessmentRoute: typeof AiAssessmentRoute
  ContactRoute: typeof ContactRoute
  NovabankRoute: typeof NovabankRoute
  ProjectsRoute: typeof ProjectsRoute
  SkinsmartRoute: typeof SkinsmartRoute
  SweethouseRoute: typeof SweethouseRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sweethouse': {
      id: '/sweethouse'
      path: '/sweethouse'
      fullPath: '/sweethouse'
      preLoaderRoute: typeof SweethouseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/skinsmart': {
      id: '/skinsmart'
      path: '/skinsmart'
      fullPath: '/skinsmart'
      preLoaderRoute: typeof SkinsmartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/novabank': {
      id: '/novabank'
      path: '/novabank'
      fullPath: '/novabank'
      preLoaderRoute: typeof NovabankRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai-assessment': {
      id: '/ai-assessment'
      path: '/ai-assessment'
      fullPath: '/ai-assessment'
      preLoaderRoute: typeof AiAssessmentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AiAssessmentRoute: AiAssessmentRoute,
  ContactRoute: ContactRoute,
  NovabankRoute: NovabankRoute,
  ProjectsRoute: ProjectsRoute,
  SkinsmartRoute: SkinsmartRoute,
  SweethouseRoute: SweethouseRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
